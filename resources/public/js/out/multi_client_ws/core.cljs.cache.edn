;; Analyzed by ClojureScript 0.0-3291
{:use-macros nil, :excludes #{}, :name multi-client-ws.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, ws multi-client-ws.websockets, multi-client-ws.websockets multi-client-ws.websockets}, :uses {atom reagent.core}, :defs {messages {:name multi-client-ws.core/messages, :file "src-cljs/multi_client_ws/core.cljs", :line 5, :column 1, :end-line 5, :end-column 18, :meta {:file "/Users/nalbarr/tmp/snofin-web-cljs/src-cljs/multi_client_ws/core.cljs", :line 5, :column 10, :end-line 5, :end-column 18}}, message-list {:protocol-inline nil, :meta {:file "/Users/nalbarr/tmp/snofin-web-cljs/src-cljs/multi_client_ws/core.cljs", :line 7, :column 7, :end-line 7, :end-column 19, :arglists (quote ([]))}, :name multi-client-ws.core/message-list, :variadic false, :file "src-cljs/multi_client_ws/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, value {:name multi-client-ws.core/value, :file "src-cljs/multi_client_ws/core.cljs", :line 13, :column 1, :end-line 13, :end-column 11, :meta {:file "/Users/nalbarr/tmp/snofin-web-cljs/src-cljs/multi_client_ws/core.cljs", :line 13, :column 6, :end-line 13, :end-column 11}}, message-input {:protocol-inline nil, :meta {:file "/Users/nalbarr/tmp/snofin-web-cljs/src-cljs/multi_client_ws/core.cljs", :line 15, :column 7, :end-line 15, :end-column 20, :arglists (quote ([]))}, :name multi-client-ws.core/message-input, :variadic false, :file "src-cljs/multi_client_ws/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, output {:name multi-client-ws.core/output, :file "src-cljs/multi_client_ws/core.cljs", :line 27, :column 1, :end-line 27, :end-column 12, :meta {:file "/Users/nalbarr/tmp/snofin-web-cljs/src-cljs/multi_client_ws/core.cljs", :line 27, :column 6, :end-line 27, :end-column 12}}, home-page {:protocol-inline nil, :meta {:file "/Users/nalbarr/tmp/snofin-web-cljs/src-cljs/multi_client_ws/core.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([{:keys [message]}]))}, :name multi-client-ws.core/home-page, :variadic false, :file "src-cljs/multi_client_ws/core.cljs", :end-column 16, :method-params ([p__27076]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [message]}]))}, update-messages! {:protocol-inline nil, :meta {:file "/Users/nalbarr/tmp/snofin-web-cljs/src-cljs/multi_client_ws/core.cljs", :line 58, :column 7, :end-line 58, :end-column 23, :arglists (quote ([{:keys [message]}]))}, :name multi-client-ws.core/update-messages!, :variadic false, :file "src-cljs/multi_client_ws/core.cljs", :end-column 23, :method-params ([p__27089]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [message]}]))}, mount-components {:protocol-inline nil, :meta {:file "/Users/nalbarr/tmp/snofin-web-cljs/src-cljs/multi_client_ws/core.cljs", :line 61, :column 7, :end-line 61, :end-column 23, :arglists (quote ([]))}, :name multi-client-ws.core/mount-components, :variadic false, :file "src-cljs/multi_client_ws/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "/Users/nalbarr/tmp/snofin-web-cljs/src-cljs/multi_client_ws/core.cljs", :line 64, :column 7, :end-line 64, :end-column 12, :arglists (quote ([]))}, :name multi-client-ws.core/init!, :variadic false, :file "src-cljs/multi_client_ws/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:div.col-sm-6 :ul :key :placeholder :font-size :ns :name :li :value :file :end-column :type :on-click :div.row>div.col-sm-12 :column :center :style :rows :button.btn.btn-primary :cols :keys :line :div.row :div.container :end-line :div.col-md-12 :h2 :arglists :textarea.form-control :on-change :h3 :on-key-down :doc :test :message :text}, :order [:ul :li :key :textarea.form-control :type :rows :cols :placeholder :value :on-change :on-key-down :text :message :div.container :div.row :div.col-md-12 :center :h3 :div.col-sm-6 :div.row>div.col-sm-12 :button.btn.btn-primary :on-click :style :font-size :h2 :ns :name :file :end-column :column :line :end-line :arglists :doc :test :keys]}, :doc nil}